name: CI

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

jobs:
  # Test:
  #   runs-on: 'ubuntu-latest'
  #   steps:
  #     - name: Clone the repository
  #       uses: actions/checkout@v3

  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8.x

  #     - name: Install dependencies
  #       run: pnpm i

  #     - name: Lint
  #       run: pnpm lint

  #     - name: Check formatting
  #       run: pnpm format

  Docker-Push:
    runs-on: 'ubuntu-latest'
    # needs: Test
    # if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Install Heroku CLI
        run:  curl https://cli-assets.heroku.com/install.sh | sh
        
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Login to ghcr.io
        run: docker login ghcr.io -u ashutoshspunyani99-tamu --password '${{ secrets.GITHUB_TOKEN }}'

      - name: Login to heroku
        run: docker login registry.heroku.com -u ${{secrets.HEROKU_REGISTRY_USERNAME}} --password ${{secrets.HEROKU_REGISTRY_PASSWORD}}

      - name: Build platform image
        run: docker build -t ghcr.io/ashutoshspunyani99-tamu/vitalvault:${{github.sha}} --target platform .
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Push platform image to ghcr.io
        run: docker push ghcr.io/ashutoshspunyani99-tamu/vitalvault:${{github.sha}}

      # - name: Notify Render for platform deploy
      #   run: curl -G --data-urlencode "imgURL=ghcr.io/ashutoshspunyani99-tamu/vitalvault:${{github.sha}}"  ${{secrets.RENDER_DEPLOY_HOOK_URL}}

      - name: Build upload image
        run: docker build -t ghcr.io/ashutoshspunyani99-tamu/vitalvault-upload:${{github.sha}} --target upload .

      - name: Push upload image to ghcr.io
        run: docker push ghcr.io/ashutoshspunyani99-tamu/vitalvault-upload:${{github.sha}}

      # - name: Notify Render for upload deploy
      #   run: curl -G --data-urlencode "imgURL=ghcr.io/ashutoshspunyani99-tamu/vitalvault-upload:${{github.sha}}"  ${{secrets.RENDER_UPLOAD_DEPLOY_HOOK_URL}}

      - name: Tag platform image to heroku
        run: docker tag ghcr.io/ashutoshspunyani99-tamu/vitalvault:${{github.sha}} registry.heroku.com/vitalvault-platform/web

      - name: Tag upload image to heroku
        run: docker tag ghcr.io/ashutoshspunyani99-tamu/vitalvault-upload:${{github.sha}} registry.heroku.com/vitalvault-upload/web

      - name: Push upload image to heroku
        run: docker push registry.heroku.com/vitalvault-upload/web

      - name: Push platform image to heroku
        run: docker push registry.heroku.com/vitalvault-platform/web

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Release platform
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a vitalvault-platform

      - name: Release upload
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a vitalvault-upload
